generator client {
    provider = "prisma-client-js"
    output   = "./app/generated-prisma-client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Center {
    id         String   @id @default(cuid())
    number     String   @unique
    name       String
    address    String
    state      String
    lga        String
    isActive   Boolean  @default(true)
    createdAt  DateTime @default(now())
    createdBy  String
    modifiedBy String?
    modifiedAt DateTime @updatedAt

    @@unique([name, state, lga])
    @@index([state], name: "idx_center_state")
    @@index([lga], name: "idx_center_lga")
    @@index([isActive], name: "idx_center_is_active")
    @@index([createdAt], name: "idx_center_created_at")
    @@index([name], name: "idx_center_name")
    @@index([number], name: "idx_center_number")
    @@index([state, lga], name: "idx_center_state_lga")
    @@index([lga, isActive], name: "idx_center_lga_is_active")
    @@index([state, isActive], name: "idx_center_state_is_active")
    @@index([createdBy], name: "idx_center_created_by")
    @@index([modifiedBy], name: "idx_center_modified_by")
    @@index([modifiedAt], name: "idx_center_modified_at")
    @@index([createdAt, isActive], name: "idx_center_created_at_is_active")
    @@map("centers")
}

model Admin {
    id        String   @id @default(cuid())
    email     String   @unique
    password  String
    name      String
    role      String   @default("ADMIN")
    isActive  Boolean  @default(true)
    createdAt DateTime @default(now())

    sessions       AdminSession[]
    passwordResets PasswordReset[]
    AuditLog       AuditLog[]
    AdminActivity  AdminActivity[]

    @@index([email], name: "idx_admin_email")
    @@index([isActive], name: "idx_admin_is_active")
    @@index([role], name: "idx_admin_role")
    @@index([createdAt], name: "idx_admin_created_at")
    @@map("admins")
}

model AdminSession {
    id        String   @id @default(cuid())
    adminId   String
    sessionId String   @unique
    token     String   @unique
    isActive  Boolean  @default(true)
    createdAt DateTime @default(now())
    expiresAt DateTime
    lastUsed  DateTime @default(now())

    admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

    @@index([isActive], name: "idx_admin_session_is_active")
    @@index([createdAt], name: "idx_admin_session_created_at")
    @@index([expiresAt], name: "idx_admin_session_expires_at")
    @@index([lastUsed], name: "idx_admin_session_last_used")
    @@map("admin_sessions")
}

model PasswordReset {
    id        String   @id @default(cuid())
    adminId   String
    token     String   @unique
    isUsed    Boolean  @default(false)
    createdAt DateTime @default(now())
    expiresAt DateTime

    admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

    @@index([isUsed], name: "idx_password_reset_is_used")
    @@index([createdAt], name: "idx_password_reset_created_at")
    @@index([expiresAt], name: "idx_password_reset_expires_at")
    @@map("password_resets")
}

model ApiLog {
    id        String   @id @default(cuid())
    endpoint  String
    method    String
    status    Int
    request   String
    response  String
    timestamp DateTime @default(now())

    @@index([endpoint], name: "idx_api_log_endpoint")
    @@index([method], name: "idx_api_log_method")
    @@index([status], name: "idx_api_log_status")
    @@index([timestamp], name: "idx_api_log_timestamp")
    @@map("api_logs")
}

model AdminActivity {
    id        String   @id @default(cuid())
    adminId   String
    activity  String
    timestamp DateTime @default(now())

    admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

    @@index([activity], name: "idx_admin_activity_activity")
    @@index([timestamp], name: "idx_admin_activity_timestamp")
    @@map("admin_activities")
}

model AuditLog {
    id        String   @id @default(cuid())
    adminId   String
    action    String
    entity    String
    entityId  String
    timestamp DateTime @default(now())
    details   String?

    admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

    @@index([action], name: "idx_audit_log_action")
    @@index([entity], name: "idx_audit_log_entity")
    @@map("audit_logs")
}
