
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CenterScalarFieldEnum = {
  id: 'id',
  number: 'number',
  name: 'name',
  address: 'address',
  state: 'state',
  lga: 'lga',
  isActive: 'isActive',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  modifiedBy: 'modifiedBy',
  modifiedAt: 'modifiedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.AdminSessionScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  sessionId: 'sessionId',
  token: 'token',
  isActive: 'isActive',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  lastUsed: 'lastUsed',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  location: 'location',
  deviceType: 'deviceType'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  token: 'token',
  isUsed: 'isUsed',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.ApiLogScalarFieldEnum = {
  id: 'id',
  endpoint: 'endpoint',
  method: 'method',
  status: 'status',
  request: 'request',
  response: 'response',
  timestamp: 'timestamp'
};

exports.Prisma.AdminActivityScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  activity: 'activity',
  timestamp: 'timestamp'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  timestamp: 'timestamp',
  details: 'details'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Center: 'Center',
  Admin: 'Admin',
  AdminSession: 'AdminSession',
  PasswordReset: 'PasswordReset',
  ApiLog: 'ApiLog',
  AdminActivity: 'AdminActivity',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ogwog\\Source\\Repos\\Project\\Web Applications\\Community\\cmapi\\prisma\\app\\generated-prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ogwog\\Source\\Repos\\Project\\Web Applications\\Community\\cmapi\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Schema Model\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./app/generated-prisma-client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Center {\n  id         String   @id @default(cuid())\n  number     String   @unique\n  name       String\n  address    String\n  state      String\n  lga        String\n  isActive   Boolean  @default(true)\n  createdAt  DateTime @default(now())\n  createdBy  String\n  modifiedBy String?\n  modifiedAt DateTime @updatedAt\n\n  @@unique([name, state, lga])\n  @@index([state], name: \"idx_center_state\")\n  @@index([lga], name: \"idx_center_lga\")\n  @@index([isActive], name: \"idx_center_is_active\")\n  @@index([createdAt], name: \"idx_center_created_at\")\n  @@index([name], name: \"idx_center_name\")\n  @@index([number], name: \"idx_center_number\")\n  @@index([state, lga], name: \"idx_center_state_lga\")\n  @@index([lga, isActive], name: \"idx_center_lga_is_active\")\n  @@index([state, isActive], name: \"idx_center_state_is_active\")\n  @@index([createdBy], name: \"idx_center_created_by\")\n  @@index([modifiedBy], name: \"idx_center_modified_by\")\n  @@index([modifiedAt], name: \"idx_center_modified_at\")\n  @@index([createdAt, isActive], name: \"idx_center_created_at_is_active\")\n  @@map(\"centers\")\n}\n\nmodel Admin {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  password  String\n  name      String\n  role      String   @default(\"ADMIN\")\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n\n  sessions       AdminSession[]\n  passwordResets PasswordReset[]\n  AuditLog       AuditLog[]\n  AdminActivity  AdminActivity[]\n\n  @@index([email], name: \"idx_admin_email\")\n  @@index([isActive], name: \"idx_admin_is_active\")\n  @@index([role], name: \"idx_admin_role\")\n  @@index([createdAt], name: \"idx_admin_created_at\")\n  @@map(\"admins\")\n}\n\n// Update the AdminSession model\nmodel AdminSession {\n  id        String   @id @default(cuid())\n  adminId   String\n  sessionId String   @unique\n  token     String   @unique\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  expiresAt DateTime\n  lastUsed  DateTime @default(now())\n\n  // Additional session information for auditing\n  userAgent  String?\n  ipAddress  String?\n  location   String?\n  deviceType String? // Mobile, Tablet, Desktop, etc.\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([isActive], name: \"idx_admin_session_is_active\")\n  @@index([createdAt], name: \"idx_admin_session_created_at\")\n  @@index([expiresAt], name: \"idx_admin_session_expires_at\")\n  @@index([lastUsed], name: \"idx_admin_session_last_used\")\n  @@index([ipAddress], name: \"idx_admin_session_ip_address\")\n  @@index([deviceType], name: \"idx_admin_session_device_type\")\n  @@map(\"admin_sessions\")\n}\n\nmodel PasswordReset {\n  id        String   @id @default(cuid())\n  adminId   String\n  token     String   @unique\n  isUsed    Boolean  @default(false)\n  createdAt DateTime @default(now())\n  expiresAt DateTime\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([isUsed], name: \"idx_password_reset_is_used\")\n  @@index([createdAt], name: \"idx_password_reset_created_at\")\n  @@index([expiresAt], name: \"idx_password_reset_expires_at\")\n  @@map(\"password_resets\")\n}\n\nmodel ApiLog {\n  id        String   @id @default(cuid())\n  endpoint  String\n  method    String\n  status    Int\n  request   String\n  response  String\n  timestamp DateTime @default(now())\n\n  @@index([endpoint], name: \"idx_api_log_endpoint\")\n  @@index([method], name: \"idx_api_log_method\")\n  @@index([status], name: \"idx_api_log_status\")\n  @@index([timestamp], name: \"idx_api_log_timestamp\")\n  @@map(\"api_logs\")\n}\n\nmodel AdminActivity {\n  id        String   @id @default(cuid())\n  adminId   String\n  activity  String\n  timestamp DateTime @default(now())\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([activity], name: \"idx_admin_activity_activity\")\n  @@index([timestamp], name: \"idx_admin_activity_timestamp\")\n  @@map(\"admin_activities\")\n}\n\nmodel AuditLog {\n  id        String   @id @default(cuid())\n  adminId   String\n  action    String\n  entity    String\n  entityId  String\n  timestamp DateTime @default(now())\n  details   String?\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([action], name: \"idx_audit_log_action\")\n  @@index([entity], name: \"idx_audit_log_entity\")\n  @@map(\"audit_logs\")\n}\n",
  "inlineSchemaHash": "704e9d28aefe8842e2dd1bb22fda4d656f7ef1909ca82894e81c6f61bd388899",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Center\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lga\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modifiedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"centers\"},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"AdminSession\",\"relationName\":\"AdminToAdminSession\"},{\"name\":\"passwordResets\",\"kind\":\"object\",\"type\":\"PasswordReset\",\"relationName\":\"AdminToPasswordReset\"},{\"name\":\"AuditLog\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AdminToAuditLog\"},{\"name\":\"AdminActivity\",\"kind\":\"object\",\"type\":\"AdminActivity\",\"relationName\":\"AdminToAdminActivity\"}],\"dbName\":\"admins\"},\"AdminSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminSession\"}],\"dbName\":\"admin_sessions\"},\"PasswordReset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isUsed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToPasswordReset\"}],\"dbName\":\"password_resets\"},\"ApiLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"request\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"api_logs\"},\"AdminActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminActivity\"}],\"dbName\":\"admin_activities\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAuditLog\"}],\"dbName\":\"audit_logs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

